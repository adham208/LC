class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {

        vector<int> list;
        if(nums.empty())
        {
            return list;
        }
        for(int i = 0;i<nums.size();i++)
        {
            for(int j = 1;j<nums.size();j++)
            {
                if(nums[i]+nums[j]==target && i!=j)
                {
                    list.push_back(i);
                    list.push_back(j);
                    return list;
                }
            }
        }
        return list;
    }
};

//or A BETTER SOLUTION

class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {

        unordered_map <int,int> MAP;
        
        for(int i = 0;i<nums.size();i++)
        {
            int complement = target - nums[i];
            if(MAP.find(complement) != MAP.end())
            {
                return {MAP[complement],i};
            }
            MAP.insert({nums[i],i});
        }
        return{};
    }
};
